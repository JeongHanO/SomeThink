name: CI/CD deploy

on:
    push:
        branches:
            - main
            - develop

jobs:
    build-deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Cache node modules
              uses: actions/cache@v2
              with:
                  path: ./client/node_modules
                  key: ${{ runner.os }}-build-client-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-client-

            - name: Install Client Dependencies
              run: npm install
              working-directory: ./client

            - name: Build Client
              run: npm run build
              working-directory: ./client

            - name: Install Server Dependencies
              run: npm ci
              working-directory: ./server

            - name: Create Server Env File
              run: |
                  touch ./server/.env
                  echo "${{ secrets.SERVER.ENV }}" >> ./server/.env

            - name: Make Tar File
              run: tar -cpvzf ./${{ secrets.TARNAME}}.tgz *
              shell: bash

            - name: Configure AWS
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ap-northeast-2

            - name: Deploy to S3 and CodeDeploy
              run: |
                  aws s3 cp \
                    --region ap-northeast-2 \
                    ./${{ secrets.TARNAME}}.tgz s3://${{ secrets.AWS_S3_BUCKET_NAME }}/build/${{ secrets.TARNAME}}.tgz
                  aws deploy create-deployment --application-name SomeThink --file-exists-behavior OVERWRITE --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name somethink-codedeploy --s3-location bucket=${{ secrets.AWS_S3_BUCKET_NAME }},bundleType=tgz,key=build/${{ secrets.TARNAME}}.tgz
